import logging
from typing import Any, Dict

from PySide6.QtWidgets import (
    QWidget, QVBoxLayout, QLabel, QGroupBox, QProgressBar, QTableWidget,
    QTableWidgetItem, QPushButton, QHeaderView, QSpinBox, QHBoxLayout,
    QStyle, QSizePolicy, QFrame, QSpacerItem, QDialog
)
from PySide6.QtCore import QTimer, Qt, QThread, Signal, QSize
from PySide6.QtGui import QFont, QGuiApplication

from linux_gui.system_info import SystemInfo
from linux_gui.session_manager import SessionManager
from linux_gui.gui.auth_block import AuthDialog  # –û–∫–Ω–æ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
from notifications import Notification

logger = logging.getLogger(__name__)


def get_cores_text(cores: Any) -> str:
    """
    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å—Ç—Ä–æ–∫—É —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º –æ–∫–æ–Ω—á–∞–Ω–∏–µ–º –¥–ª—è –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ —è–¥–µ—Ä.
    –ü—Ä–∏–º–µ—Ä—ã:
      1 -> "1 —è–¥—Ä–æ", 2 -> "2 —è–¥—Ä–∞", 5 -> "5 —è–¥–µ—Ä".

    :param cores: –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —è–¥–µ—Ä (—á–∏—Å–ª–æ –∏–ª–∏ —Å—Ç—Ä–æ–∫–∞, –∫–æ—Ç–æ—Ä—É—é –º–æ–∂–Ω–æ –ø—Ä–∏–≤–µ—Å—Ç–∏ –∫ int).
    :return: –°—Ç—Ä–æ–∫–∞ —Å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ–º —è–¥–µ—Ä –∏ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º –æ–∫–æ–Ω—á–∞–Ω–∏–µ–º.
    """
    try:
        cores_int = int(cores)
    except (ValueError, TypeError):
        return "N/A"
    if cores_int % 100 in (11, 12, 13, 14):
        ending = "—è–¥–µ—Ä"
    else:
        last_digit = cores_int % 10
        if last_digit == 1:
            ending = "—è–¥—Ä–æ"
        elif last_digit in (2, 3, 4):
            ending = "—è–¥—Ä–∞"
        else:
            ending = "—è–¥–µ—Ä"
    return f"{cores_int} {ending}"


class CopyableLabel(QLabel):
    """
    QLabel —Å –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å—é –≤—ã–¥–µ–ª–µ–Ω–∏—è —Ç–µ–∫—Å—Ç–∞ –∏ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è –µ–≥–æ –ø–æ –∫–ª–∏–∫—É –õ–ö–ú.
    –ü—Ä–∏ –∫–ª–∏–∫–µ —Ç–µ–∫—Å—Ç –∫–æ–ø–∏—Ä—É–µ—Ç—Å—è –≤ –±—É—Ñ–µ—Ä –æ–±–º–µ–Ω–∞, –≤—ã–≤–æ–¥–∏—Ç—Å—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ, –∞ —Ñ–æ–Ω –∫—Ä–∞—Ç–∫–æ–≤—Ä–µ–º–µ–Ω–Ω–æ –º–µ–Ω—è–µ—Ç—Å—è.
    """

    def __init__(self, text: str = "", parent: QWidget | None = None) -> None:
        super().__init__(text, parent)
        # –†–∞–∑—Ä–µ—à–∞–µ–º –≤—ã–¥–µ–ª–µ–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞ –º—ã—à—å—é
        self.setTextInteractionFlags(Qt.TextSelectableByMouse)

    def mousePressEvent(self, event) -> None:
        if event.button() == Qt.LeftButton:
            original_style = self.styleSheet()
            self.setStyleSheet("background-color: #e0e0e0;")  # –°–≤–µ—Ç–ª–æ-—Å–µ—Ä—ã–π —Ñ–æ–Ω –¥–ª—è —ç—Ñ—Ñ–µ–∫—Ç–∞ –Ω–∞–∂–∞—Ç–∏—è
            QTimer.singleShot(150, lambda: self.setStyleSheet(original_style))
            clipboard = QGuiApplication.clipboard()
            clipboard.setText(self.text())
            # –ü–µ—Ä–µ–¥–∞—ë–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –±–µ–∑ —É–∫–∞–∑–∞–Ω–∏—è —Ä–æ–¥–∏—Ç–µ–ª—è (–µ—Å–ª–∏ —Ç—Ä–µ–±—É–µ—Ç—Å—è ‚Äì –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å self.window())
            Notification("–°–∫–æ–ø–∏—Ä–æ–≤–∞–Ω–æ", f"–°–∫–æ–ø–∏—Ä–æ–≤–∞–Ω–æ: {self.text()}", "success").show_notification()
        super().mousePressEvent(event)


class SystemInfoThread(QThread):
    """
    –ü–æ—Ç–æ–∫ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –æ —Å–∏—Å—Ç–µ–º–µ, —á—Ç–æ–±—ã –Ω–µ –±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å –æ—Å–Ω–æ–≤–Ω–æ–π GUI.
    """
    data_ready = Signal(dict)

    def __init__(self, system_info: SystemInfo, parent: QWidget | None = None) -> None:
        super().__init__(parent)
        self.system_info = system_info

    def run(self) -> None:
        """–§–æ–Ω–æ–≤—ã–π –ø–æ—Ç–æ–∫ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –æ —Å–∏—Å—Ç–µ–º–µ."""
        logger.debug("üîÑ SystemInfoThread –∑–∞–ø—É—â–µ–Ω, –∑–∞–ø—Ä–∞—à–∏–≤–∞—é –¥–∞–Ω–Ω—ã–µ...")
        try:
            info = self.system_info.get_system_info()
            logger.debug(f"‚úÖ SystemInfoThread –ø–æ–ª—É—á–∏–ª –¥–∞–Ω–Ω—ã–µ: {info}")
        except Exception as e:
            logger.exception("‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å–∏—Å—Ç–µ–º–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏")
            info = {"error": str(e)}
        self.data_ready.emit(info)
        logger.debug("‚úÖ SystemInfoThread –∑–∞–≤–µ—Ä—à–∏–ª –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ.")


class SystemInfoBlock(QWidget):
    """
    –í–∏–¥–∂–µ—Ç –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Å–∏—Å—Ç–µ–º–µ —É–¥–∞–ª—ë–Ω–Ω–æ–≥–æ Linux‚Äë—Ö–æ—Å—Ç–∞.
    –°–æ–¥–µ—Ä–∂–∏—Ç –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä—ã –∑–∞–≥—Ä—É–∑–∫–∏ CPU –∏ RAM, —Ç–∞–±–ª–∏—Ü—É –ø–æ –¥–∏—Å–∫–∞–º,
    —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é (–º–æ–¥–µ–ª—å –ø—Ä–æ—Ü–µ—Å—Å–æ—Ä–∞, –º–∞—Ç–µ—Ä–∏–Ω—Å–∫–æ–π –ø–ª–∞—Ç—ã, –≤—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã, MAC-–∞–¥—Ä–µ—Å)
    –∏ –∫–Ω–æ–ø–∫—É –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è. –ü—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è –∫–Ω–æ–ø–∫–∞ –¥–ª—è –∑–∞–ø—Ä–æ—Å–∞ root‚Äë–¥–æ—Å—Ç—É–ø–∞.
    """

    def __init__(self, hostname: str, parent: QWidget | None = None) -> None:
        super().__init__(parent)
        self.hostname: str = hostname
        # –ò–∑–Ω–∞—á–∞–ª—å–Ω–æ —Å–æ–∑–¥–∞—ë–º SystemInfo –±–µ–∑ root-–¥–æ—Å—Ç—É–ø–∞
        self.system_info: SystemInfo = SystemInfo(hostname)
        self.timer: QTimer = QTimer(self)
        self.timer.timeout.connect(self.safe_update)
        self.thread: QThread | None = None

        # –ë–∞–∑–æ–≤—ã–µ —à—Ä–∏—Ñ—Ç—ã
        self.base_font: QFont = QFont("Arial", 10)
        self.header_font: QFont = QFont("Arial", 12, QFont.Bold)

        # –≠–ª–µ–º–µ–Ω—Ç—ã –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è CPU
        self.cpu_progress: QProgressBar = QProgressBar()
        self.cpu_label: QLabel = QLabel()
        self.cpu_progress.setFont(self.base_font)
        self.cpu_label.setFont(self.base_font)
        self.cpu_progress.setToolTip("–ó–∞–≥—Ä—É–∑–∫–∞ –ø—Ä–æ—Ü–µ—Å—Å–æ—Ä–∞")

        # –≠–ª–µ–º–µ–Ω—Ç—ã –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è RAM
        self.ram_progress: QProgressBar = QProgressBar()
        self.ram_label: QLabel = QLabel()
        self.ram_progress.setFont(self.base_font)
        self.ram_label.setFont(self.base_font)
        self.ram_progress.setToolTip("–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –æ–ø–µ—Ä–∞—Ç–∏–≤–Ω–æ–π –ø–∞–º—è—Ç–∏")

        # –¢–∞–±–ª–∏—Ü–∞ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –ø–æ –¥–∏—Å–∫–∞–º
        self.disk_table: QTableWidget = QTableWidget()
        self.disk_table.setFont(self.base_font)
        self.disk_table.setColumnCount(4)
        self.disk_table.setHorizontalHeaderLabels([
            "üíΩ –†–∞–∑–¥–µ–ª", "üì¶ –í—Å–µ–≥–æ", "üîì –°–≤–æ–±–æ–¥–Ω–æ", "üìà –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–æ"
        ])
        header_obj = self.disk_table.horizontalHeader()
        header_obj.setSectionResizeMode(QHeaderView.Stretch)
        self.disk_table.verticalHeader().setVisible(False)
        self.disk_table.setSelectionMode(QTableWidget.NoSelection)
        self.disk_table.setSizePolicy(QSizePolicy.Expanding, QSizePolicy.Fixed)
        self.disk_table.setFixedHeight(130)

        # –≠–ª–µ–º–µ–Ω—Ç—ã –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ (–∏—Å–ø–æ–ª—å–∑—É–µ–º CopyableLabel)
        self.cpu_model_label: CopyableLabel = CopyableLabel("–ü—Ä–æ—Ü–µ—Å—Å–æ—Ä: –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ")
        self.cpu_model_label.setFont(self.base_font)
        self.motherboard_label: CopyableLabel = CopyableLabel("–ú–∞—Ç–µ—Ä–∏–Ω—Å–∫–∞—è –ø–ª–∞—Ç–∞: –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ")
        self.motherboard_label.setFont(self.base_font)
        self.uptime_label: CopyableLabel = CopyableLabel("–í—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã: –∑–∞–≥—Ä—É–∑–∫–∞...")
        self.uptime_label.setFont(self.base_font)
        self.mac_address_label: CopyableLabel = CopyableLabel("MAC-–∞–¥—Ä–µ—Å: –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ")
        self.mac_address_label.setFont(self.base_font)

        # –ö–Ω–æ–ø–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ root-–¥–æ—Å—Ç—É–ø–∞ (—Å–∫—Ä—ã—Ç–∞ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é)
        self.root_access_button: QPushButton = QPushButton("üîë –ü–æ–ª—É—á–∏—Ç—å root-–¥–æ—Å—Ç—É–ø")
        self.root_access_button.setFont(self.base_font)
        self.root_access_button.setVisible(False)
        self.root_access_button.clicked.connect(self.request_root_access)

        # –ö–Ω–æ–ø–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö
        self.refresh_button: QPushButton = QPushButton("–û–±–Ω–æ–≤–∏—Ç—å –¥–∞–Ω–Ω—ã–µ")
        self.refresh_button.setFont(self.base_font)
        self.refresh_button.setIcon(self.style().standardIcon(QStyle.SP_BrowserReload))
        self.refresh_button.setIconSize(QSize(20, 20))
        self.refresh_button.setToolTip("–ù–∞–∂–º–∏—Ç–µ –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –æ —Å–∏—Å—Ç–µ–º–µ")
        self.refresh_button.clicked.connect(self.safe_update)

        # –ò–Ω—Ç–µ—Ä–≤–∞–ª –∞–≤—Ç–æ–æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
        self.interval_label: QLabel = QLabel("‚è±Ô∏è –ò–Ω—Ç–µ—Ä–≤–∞–ª –∞–≤—Ç–æ–æ–±–Ω–æ–≤–ª–µ–Ω–∏—è:")
        self.interval_label.setFont(self.base_font)
        self.interval_input: QSpinBox = QSpinBox()
        self.interval_input.setRange(0, 600)
        self.interval_input.setSuffix(" —Å–µ–∫")
        self.interval_input.setSingleStep(10)
        self.interval_input.setValue(0)
        self.interval_input.setFixedWidth(120)
        self.interval_input.setAlignment(Qt.AlignRight)
        self.interval_input.setFont(self.base_font)
        self.interval_input.setToolTip("–ó–∞–¥–∞–π—Ç–µ –∏–Ω—Ç–µ—Ä–≤–∞–ª –∞–≤—Ç–æ–æ–±–Ω–æ–≤–ª–µ–Ω–∏—è (0 ‚Äì –∞–≤—Ç–æ–æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –æ—Ç–∫–ª—é—á–µ–Ω–æ)")
        self.interval_input.valueChanged.connect(self.update_timer)

        self.init_ui()
        self.safe_update()

    def init_ui(self) -> None:
        """
        –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç –≤–∏–∑—É–∞–ª—å–Ω—ã–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã –≤–∏–¥–∂–µ—Ç–∞ —Å –ø–µ—Ä–µ—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã–º —Ä–∞—Å–ø–æ–ª–æ–∂–µ–Ω–∏–µ–º —ç–ª–µ–º–µ–Ω—Ç–æ–≤.
        """
        self.group_box: QGroupBox = QGroupBox("üñ•Ô∏è –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–∏—Å—Ç–µ–º–µ")
        self.group_box.setFont(self.header_font)

        # –û—Å–Ω–æ–≤–Ω–æ–π layout –¥–ª—è –≥—Ä—É–ø–ø—ã
        group_layout = QVBoxLayout(self.group_box)
        group_layout.setSpacing(10)
        group_layout.setContentsMargins(12, 12, 12, 12)

        # 1. –ë–ª–æ–∫ —Å –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä–∞–º–∏ CPU –∏ RAM (–æ–¥–∏–Ω —Ä—è–¥)
        progress_layout = QHBoxLayout()
        cpu_box = self.create_progress_box("–ü—Ä–æ—Ü–µ—Å—Å–æ—Ä:", self.cpu_label, self.cpu_progress)
        ram_box = self.create_progress_box("–û–ó–£:", self.ram_label, self.ram_progress)
        progress_layout.addWidget(cpu_box)
        progress_layout.addWidget(ram_box)
        progress_layout.addStretch()
        group_layout.addLayout(progress_layout)

        # 2. –¢–∞–±–ª–∏—Ü–∞ –¥–∏—Å–∫–æ–≤
        group_layout.addWidget(self.disk_table)

        # 3. –ë–ª–æ–∫ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è: –∫–Ω–æ–ø–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∏ –≤—ã–±–æ—Ä –∏–Ω—Ç–µ—Ä–≤–∞–ª–∞ –∞–≤—Ç–æ–æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
        control_layout = QHBoxLayout()
        control_layout.addWidget(self.refresh_button)
        control_layout.addStretch()
        group_layout.addLayout(control_layout)

        interval_layout = QHBoxLayout()
        interval_layout.addWidget(self.interval_label)
        interval_layout.addWidget(self.interval_input)
        interval_layout.addStretch()
        group_layout.addLayout(interval_layout)

        # 4. –ë–ª–æ–∫ —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ (–¥–≤–∞ —Ä—è–¥–∞ –ø–æ –¥–≤–∞ —ç–ª–µ–º–µ–Ω—Ç–∞)
        details_layout = QVBoxLayout()
        row1_layout = QHBoxLayout()
        row1_layout.addWidget(self.cpu_model_label)
        row1_layout.addWidget(self.motherboard_label)
        row1_layout.addStretch()
        row2_layout = QHBoxLayout()
        row2_layout.addWidget(self.uptime_label)
        row2_layout.addWidget(self.mac_address_label)
        row2_layout.addStretch()
        details_layout.addLayout(row1_layout)
        details_layout.addSpacing(10)
        details_layout.addLayout(row2_layout)
        group_layout.addLayout(details_layout)

        # 5. –ö–Ω–æ–ø–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ root-–¥–æ—Å—Ç—É–ø–∞ (–ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏)
        group_layout.addWidget(self.root_access_button)

        self.group_box.setLayout(group_layout)

        # –û—Å–Ω–æ–≤–Ω–æ–π layout –≤–∏–¥–∂–µ—Ç–∞
        main_layout = QVBoxLayout(self)
        main_layout.setContentsMargins(12, 12, 12, 12)
        main_layout.setSpacing(10)
        main_layout.addWidget(self.group_box)
        spacer = QSpacerItem(20, 20, QSizePolicy.Minimum, QSizePolicy.Expanding)
        main_layout.addItem(spacer)
        separator = QFrame()
        separator.setFrameShape(QFrame.HLine)
        separator.setFrameShadow(QFrame.Sunken)
        main_layout.addWidget(separator)
        self.setLayout(main_layout)

    def create_progress_box(self, title: str, label: QLabel, progress_bar: QProgressBar) -> QWidget:
        """
        –°–æ–∑–¥–∞–µ—Ç –≤–∏–¥–∂–µ—Ç –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∑–∞–≥–æ–ª–æ–≤–∫–∞ –∏ –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä–∞ (–ø—Ä–æ–≥—Ä–µ—Å—Å–±–∞—Ä–∞).

        :param title: –¢–µ–∫—Å—Ç –∑–∞–≥–æ–ª–æ–≤–∫–∞.
        :param label: QLabel –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∑–∞–≥–æ–ª–æ–≤–∫–∞.
        :param progress_bar: QProgressBar –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –ø—Ä–æ–≥—Ä–µ—Å—Å–∞.
        :return: –°–æ–±—Ä–∞–Ω–Ω—ã–π –≤–∏–¥–∂–µ—Ç.
        """
        box = QWidget()
        layout = QVBoxLayout()
        layout.setContentsMargins(0, 0, 0, 0)
        label.setText(title)
        label.setAlignment(Qt.AlignLeft | Qt.AlignVCenter)
        progress_bar.setTextVisible(True)
        progress_bar.setAlignment(Qt.AlignCenter)
        layout.addWidget(label)
        layout.addWidget(progress_bar)
        box.setLayout(layout)
        return box

    def update_timer(self) -> None:
        """
        –û–±–Ω–æ–≤–ª—è–µ—Ç –∏–Ω—Ç–µ—Ä–≤–∞–ª –∞–≤—Ç–æ–æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–∏ —Å–æ –∑–Ω–∞—á–µ–Ω–∏–µ–º, –∑–∞–¥–∞–Ω–Ω—ã–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º.
        """
        interval = self.interval_input.value() * 1000
        if interval > 0:
            self.timer.start(interval)
        else:
            self.timer.stop()

    def request_root_access(self) -> None:
        """
        –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ—Ç root-–¥–æ—Å—Ç—É–ø —á–µ—Ä–µ–∑ –¥–∏–∞–ª–æ–≥ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏.
        –ï—Å–ª–∏ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞, –ø–µ—Ä–µ—Å–æ–∑–¥–∞—ë—Ç SessionManager –∏ –æ–±–Ω–æ–≤–ª—è–µ—Ç SystemInfo.
        """
        dialog = AuthDialog(self.hostname, self.hostname)  # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –æ–∫–Ω–æ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
        if dialog.exec() == QDialog.Accepted:
            credentials = dialog.get_credentials()  # –ú–µ—Ç–æ–¥ get_credentials() –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω –≤ AuthDialog
            if not credentials:
                logger.error("‚ùå –û—à–∏–±–∫–∞: –Ω–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å root-—É—á—ë—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ.")
                return
            root_username, root_password = credentials
            # –ü–µ—Ä–µ—Å–æ–∑–¥–∞—ë–º –º–µ–Ω–µ–¥–∂–µ—Ä —Å root-–¥–æ—Å—Ç—É–ø–æ–º
            session = SessionManager.get_instance(
                self.hostname,
                root_username,
                root_password,
                root_username=root_username,
                root_password=root_password
            )
            try:
                session.connect()
            except Exception as e:
                logger.exception("–û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è —Å root-–¥–æ—Å—Ç—É–ø–æ–º")
                Notification(
                    "üîë –û—à–∏–±–∫–∞ root-–¥–æ—Å—Ç—É–ø–∞",
                    f"–ù–µ —É–¥–∞–ª–æ—Å—å –≤—ã–ø–æ–ª–Ω–∏—Ç—å –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —Å root-–ø—Ä–∞–≤–∞–º–∏.\n–û—à–∏–±–∫–∞: `{e}`",
                    "error",
                    parent=self.window()
                ).show_notification()

                return
            # –û–±–Ω–æ–≤–ª—è–µ–º SystemInfo —Å –Ω–æ–≤—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏
            self.system_info = SystemInfo(self.hostname, root_username, root_password)
            logger.info("‚úÖ Root-–¥–æ—Å—Ç—É–ø —É—Å–ø–µ—à–Ω–æ –ø–æ–ª—É—á–µ–Ω, –æ–±–Ω–æ–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ...")
            self.safe_update()

    def safe_update(self) -> None:
        """
        –ó–∞–ø—É—Å–∫–∞–µ—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –æ —Å–∏—Å—Ç–µ–º–µ –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º –ø–æ—Ç–æ–∫–µ.
        –ï—Å–ª–∏ –ø—Ä–µ–¥—ã–¥—É—â–∏–π –ø–æ—Ç–æ–∫ –µ—â—ë –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è, –Ω–æ–≤–∞—è –∑–∞–¥–∞—á–∞ –Ω–µ –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è.
        """
        if self.thread and self.thread.isRunning():
            logger.warning("‚ö†Ô∏è –ü—Ä–µ–¥—ã–¥—É—â–∏–π –ø–æ—Ç–æ–∫ –µ—â—ë –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è, –Ω–æ–≤–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –Ω–µ –∑–∞–ø—É—â–µ–Ω–æ.")
            return
        logger.debug("üöÄ –ó–∞–ø—É—Å–∫–∞—é –Ω–æ–≤—ã–π –ø–æ—Ç–æ–∫ SystemInfoThread...")
        self.refresh_button.setEnabled(False)
        self.thread = SystemInfoThread(self.system_info)
        self.thread.data_ready.connect(self.update_info)
        self.thread.start()

    def update_info(self, info: Dict[str, Any]) -> None:
        """
        –û–±–Ω–æ–≤–ª—è–µ—Ç GUI –Ω–∞ –æ—Å–Ω–æ–≤–µ –ø–æ–ª—É—á–µ–Ω–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏.

        :param info: –°–ª–æ–≤–∞—Ä—å —Å –¥–∞–Ω–Ω—ã–º–∏ –æ —Å–∏—Å—Ç–µ–º–µ.
        """
        logger.debug(f"update_info() –ø–æ–ª—É—á–∏–ª –¥–∞–Ω–Ω—ã–µ: {info}")

        if not isinstance(info, dict) or "error" in info:
            error_msg = info.get("error", "‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ")
            logger.error(f"–û—à–∏–±–∫–∞ –≤ –¥–∞–Ω–Ω—ã—Ö: {error_msg}")

            self.cpu_label.setText(f"–ü—Ä–æ—Ü–µ—Å—Å–æ—Ä: {error_msg}")
            self.cpu_progress.setValue(0)
            self.ram_label.setText("–û–ó–£: –¥–∞–Ω–Ω—ã–µ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã")
            self.ram_progress.setValue(0)
            self.disk_table.setRowCount(0)
            self.cpu_model_label.setText("–ü—Ä–æ—Ü–µ—Å—Å–æ—Ä: –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ")
            self.motherboard_label.setText("–ú–∞—Ç–µ—Ä–∏–Ω—Å–∫–∞—è –ø–ª–∞—Ç–∞: –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ")
            self.uptime_label.setText("–í—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã: N/A")
            self.mac_address_label.setText("MAC-–∞–¥—Ä–µ—Å: N/A")

            # –ï—Å–ª–∏ –æ—à–∏–±–∫–∞ —Å–≤—è–∑–∞–Ω–∞ —Å –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–µ–º root-–¥–æ—Å—Ç—É–ø–∞ ‚Äì –æ—Ç–æ–±—Ä–∞–∂–∞–µ–º –∫–Ω–æ–ø–∫—É
            if "—Ç—Ä–µ–±—É–µ—Ç—Å—è root-–¥–æ—Å—Ç—É–ø" in error_msg or "–Ω–µ –ø–µ—Ä–µ–¥–∞–Ω –ø–∞—Ä–æ–ª—å root" in error_msg:
                self.root_access_button.setVisible(True)
                Notification(
                    "üîë –¢—Ä–µ–±—É–µ—Ç—Å—è root-–¥–æ—Å—Ç—É–ø",
                    "–î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–ª–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Å–∏—Å—Ç–µ–º–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã root-–ø—Ä–∞–≤–∞.",
                    "warning",
                    parent=self.window()
                ).show_notification()

            self.refresh_button.setEnabled(True)
            return

        # –û–±–Ω–æ–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ CPU
        cpu_data = info.get("CPU", {})
        cpu_load = cpu_data.get("Load", 0)
        cpu_cores = cpu_data.get("Cores")
        value_cpu = int(cpu_load) if cpu_load is not None else 0
        self.cpu_progress.setValue(value_cpu)
        cores_text = get_cores_text(cpu_cores)
        self.cpu_progress.setFormat(f"{value_cpu}% –∑–∞–≥—Ä—É–∑–∫–∏ / {cores_text}")
        self.cpu_label.setText(f"–ü—Ä–æ—Ü–µ—Å—Å–æ—Ä: {value_cpu}%")

        # –û–±–Ω–æ–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ RAM
        ram_data = info.get("RAM", {})
        ram_used = ram_data.get("UsedPercent", 0)
        ram_total = ram_data.get("TotalGB")
        value_ram = int(ram_used) if ram_used is not None else 0
        self.ram_progress.setValue(value_ram)
        total_text = f"{ram_total:.1f} GB" if ram_total is not None else "N/A"
        self.ram_progress.setFormat(f"{value_ram}% –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–æ / {total_text} –≤—Å–µ–≥–æ")
        self.ram_label.setText(f"–û–ó–£: {value_ram}%")

        # –û–±–Ω–æ–≤–ª—è–µ–º —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é
        cpu_model = info.get("CPU_Model", "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ")
        motherboard = info.get("Motherboard_Model", "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ")
        # –ï—Å–ª–∏ –¥–∞–Ω–Ω—ã–µ —Å–æ–¥–µ—Ä–∂–∞—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ root-–¥–æ—Å—Ç—É–ø–∞ ‚Äì –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–Ω–æ–ø–∫—É
        if ("—Ç—Ä–µ–±—É–µ—Ç—Å—è root-–¥–æ—Å—Ç—É–ø" in cpu_model or
                "—Ç—Ä–µ–±—É–µ—Ç—Å—è root-–¥–æ—Å—Ç—É–ø" in motherboard or
                "–Ω–µ –ø–µ—Ä–µ–¥–∞–Ω –ø–∞—Ä–æ–ª—å root" in cpu_model):
            self.root_access_button.setVisible(True)
        else:
            self.root_access_button.setVisible(False)

        self.cpu_model_label.setText(f"–ü—Ä–æ—Ü–µ—Å—Å–æ—Ä: {cpu_model}")
        self.motherboard_label.setText(f"–ú–∞—Ç–µ—Ä–∏–Ω—Å–∫–∞—è –ø–ª–∞—Ç–∞: {motherboard}")
        self.uptime_label.setText(f"–í—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã: {info.get('Uptime', 'N/A')}")
        self.mac_address_label.setText(f"MAC-–∞–¥—Ä–µ—Å: {info.get('MAC_Address', 'N/A')}")

        # –û–±–Ω–æ–≤–ª—è–µ–º —Ç–∞–±–ª–∏—Ü—É –¥–∏—Å–∫–æ–≤
        disks = info.get("Disks", [])
        self.disk_table.setRowCount(len(disks))
        for row, disk in enumerate(disks):
            self.add_disk_row(
                row,
                disk.get("Letter", "N/A"),
                disk.get("TotalGB", 0),
                disk.get("FreeGB", 0),
                disk.get("UsedPercent", 0)
            )

        logger.debug("update_info() –∑–∞–≤–µ—Ä—à–∏–ª –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ GUI.")
        Notification(
            "üñ•Ô∏è –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã",
            "–°–∏—Å—Ç–µ–º–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω–∞.",
            "success",
            parent=self.window()
        ).show_notification()
        self.refresh_button.setEnabled(True)

    def add_disk_row(self, row: int, letter: Any, total: Any, free: Any, used_percent: Any) -> None:
        """
        –î–æ–±–∞–≤–ª—è–µ—Ç —Å—Ç—Ä–æ–∫—É –≤ —Ç–∞–±–ª–∏—Ü—É –¥–∏—Å–∫–æ–≤ —Å –≤—ã—Ä–∞–≤–Ω–∏–≤–∞–Ω–∏–µ–º –∏ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ–º.

        :param row: –ù–æ–º–µ—Ä —Å—Ç—Ä–æ–∫–∏.
        :param letter: –ò–º—è —Ä–∞–∑–¥–µ–ª–∞.
        :param total: –û–±—â–∏–π –æ–±—ä—ë–º.
        :param free: –°–≤–æ–±–æ–¥–Ω–æ–µ –º–µ—Å—Ç–æ.
        :param used_percent: –ü—Ä–æ—Ü–µ–Ω—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è.
        """
        items = [
            QTableWidgetItem(str(letter)),
            QTableWidgetItem(f"{total:.1f} GB"),
            QTableWidgetItem(f"{free:.1f} GB"),
            QTableWidgetItem(f"{used_percent:.1f}%")
        ]
        for col, item in enumerate(items):
            item.setTextAlignment(Qt.AlignCenter)
            item.setFlags(item.flags() & ~Qt.ItemIsEditable)
            self.disk_table.setItem(row, col, item)
