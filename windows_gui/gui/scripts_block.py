from pathlib import Path
import subprocess

from PySide6.QtCore import Qt, QSize, Signal, QRect, QUrl
from PySide6.QtGui import QColor, QPainter, QFontMetrics, QIcon, QAction, QDesktopServices
from PySide6.QtWidgets import (
    QWidget, QVBoxLayout, QPushButton, QListWidget, QGroupBox,
    QListWidgetItem, QMenu, QLineEdit, QHBoxLayout, QLabel,
    QInputDialog, QStyledItemDelegate, QFileDialog, QMessageBox
)

# –ò–º–ø–æ—Ä—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
from notifications import Notification
from windows_gui.scripts import ScriptsManager


class ScriptItemDelegate(QStyledItemDelegate):
    """
    –î–µ–ª–µ–≥–∞—Ç –¥–ª—è –æ—Ç—Ä–∏—Å–æ–≤–∫–∏ —ç–ª–µ–º–µ–Ω—Ç–∞ —Å–ø–∏—Å–∫–∞ —Å–∫—Ä–∏–ø—Ç–æ–≤ —Å —Ç–µ–≥–∞–º–∏.
    """
    def paint(self, painter, option, index):
        super().paint(painter, option, index)
        script = index.data(Qt.UserRole)

        if script and script.get('tags'):
            painter.save()

            # –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –æ—Ç—Å—Ç—É–ø–æ–≤ –∏ —Å—Ç–∏–ª—è –¥–ª—è —Ç–µ–≥–æ–≤
            tag_spacing = 5
            tag_height = 20
            tag_radius = 8
            font_metrics = QFontMetrics(option.font)

            # –ù–∞—á–∞–ª—å–Ω–∞—è –ø–æ–∑–∏—Ü–∏—è –¥–ª—è —Ç–µ–≥–æ–≤ (—Å–ø—Ä–∞–≤–∞ –Ω–∞–ª–µ–≤–æ)
            x_pos = option.rect.right() - 10  # –æ—Ç—Å—Ç—É–ø 10px –æ—Ç –ø—Ä–∞–≤–æ–≥–æ –∫—Ä–∞—è

            # –†–∏—Å—É–µ–º —Ç–µ–≥–∏ –≤ –æ–±—Ä–∞—Ç–Ω–æ–º –ø–æ—Ä—è–¥–∫–µ
            for tag in reversed(script['tags']):
                # –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º —à–∏—Ä–∏–Ω—É —Ç–µ–∫—Å—Ç–∞ —Å –æ—Ç—Å—Ç—É–ø–∞–º–∏
                text_width = font_metrics.horizontalAdvance(tag) + 20

                tag_rect = QRect(
                    x_pos - text_width,
                    option.rect.top() + (option.rect.height() - tag_height) // 2,
                    text_width,
                    tag_height
                )

                # –ï—Å–ª–∏ —Ç–µ–≥ –≤—ã—Ö–æ–¥–∏—Ç –∑–∞ –ª–µ–≤—É—é –≥—Ä–∞–Ω–∏—Ü—É ‚Äî –ø—Ä–µ–∫—Ä–∞—â–∞–µ–º –æ—Ç—Ä–∏—Å–æ–≤–∫—É
                if tag_rect.left() < option.rect.left():
                    break

                # –†–∏—Å—É–µ–º —Ñ–æ–Ω —Ç–µ–≥–∞
                painter.setBrush(QColor(230, 240, 255))
                painter.setPen(Qt.NoPen)
                painter.drawRoundedRect(tag_rect, tag_radius, tag_radius)

                # –†–∏—Å—É–µ–º —Ç–µ–∫—Å—Ç —Ç–µ–≥–∞
                painter.setPen(QColor(50, 100, 200))
                painter.drawText(
                    tag_rect.adjusted(5, 0, -5, 0),
                    Qt.AlignCenter,
                    tag
                )

                x_pos -= text_width + tag_spacing

            painter.restore()


class ScriptsBlock(QWidget):
    """
    –í–∏–¥–∂–µ—Ç –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –±–∏–±–ª–∏–æ—Ç–µ–∫–æ–π —Å–∫—Ä–∏–ø—Ç–æ–≤:
    –∑–∞–ø—É—Å–∫, –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ, —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ, –ø–µ—Ä–µ–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ, —É–¥–∞–ª–µ–Ω–∏–µ –∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ç–µ–≥–∞–º–∏.
    """
    script_executed = Signal(str, str)

    def __init__(self, hostname: str, parent=None):
        super().__init__(parent)
        self.manager = ScriptsManager(hostname)
        self._init_ui()
        self.load_scripts()

    def _init_ui(self):
        """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–≥–æ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞."""
        main_layout = QVBoxLayout(self)
        main_layout.setContentsMargins(5, 5, 5, 5)

        group_box = QGroupBox("–ë–∏–±–ª–∏–æ—Ç–µ–∫–∞ —Å–∫—Ä–∏–ø—Ç–æ–≤")
        group_box.setStyleSheet("""
            QGroupBox {
                font-size: 14px;
                font-weight: bold;
                margin-top: 10px;
            }
            QGroupBox::title {
                subcontrol-origin: margin;
                left: 10px;
                padding: 0 3px;
            }
        """)

        group_layout = QVBoxLayout(group_box)
        group_layout.setSpacing(10)

        # –§–∏–ª—å—Ç—Ä—ã: –ø–æ–∏—Å–∫ –ø–æ –∏–º–µ–Ω–∏ –∏ —Ç–µ–≥–∞–º
        filter_layout = QHBoxLayout()
        self.search_input = QLineEdit()
        self.search_input.setPlaceholderText("–ü–æ–∏—Å–∫ –ø–æ –∏–º–µ–Ω–∏...")
        self.search_input.setClearButtonEnabled(True)

        self.tag_input = QLineEdit()
        self.tag_input.setPlaceholderText("–§–∏–ª—å—Ç—Ä –ø–æ —Ç–µ–≥–∞–º...")
        self.tag_input.setClearButtonEnabled(True)

        filter_layout.addWidget(QLabel("–§–∏–ª—å—Ç—Ä—ã:"))
        filter_layout.addWidget(self.search_input)
        filter_layout.addWidget(QLabel("   "))
        filter_layout.addWidget(self.tag_input)

        # –°–ø–∏—Å–æ–∫ —Å–∫—Ä–∏–ø—Ç–æ–≤
        self.scripts_list = QListWidget()
        self.scripts_list.setItemDelegate(ScriptItemDelegate())
        self.scripts_list.setContextMenuPolicy(Qt.CustomContextMenu)
        self.scripts_list.setAlternatingRowColors(True)
        self.scripts_list.setStyleSheet("""
            QListWidget {
                border: 1px solid #d0d0d0;
                border-radius: 3px;
                padding: 2px;
            }
        """)

        # –ö–Ω–æ–ø–∫–∏ –¥–ª—è –æ–ø–µ—Ä–∞—Ü–∏–π
        btn_layout = QHBoxLayout()
        self.add_btn = QPushButton("–î–æ–±–∞–≤–∏—Ç—å —Å–∫—Ä–∏–ø—Ç")
        self.add_btn.setIcon(QIcon.fromTheme("document-open"))

        self.tag_btn = QPushButton("–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ç–µ–≥–∞–º–∏")
        self.tag_btn.setIcon(QIcon.fromTheme("preferences-other"))

        btn_layout.addStretch()
        btn_layout.addWidget(self.add_btn)
        btn_layout.addWidget(self.tag_btn)

        # –ü–æ–¥–∫–ª—é—á–∞–µ–º —Å–∏–≥–Ω–∞–ª—ã
        self.search_input.textChanged.connect(self.filter_scripts)
        self.tag_input.textChanged.connect(self.filter_by_tags)
        self.scripts_list.customContextMenuRequested.connect(self.show_context_menu)
        self.scripts_list.itemDoubleClicked.connect(self.execute_script)
        self.add_btn.clicked.connect(self.add_script_dialog)
        self.tag_btn.clicked.connect(self.manage_tags_dialog)

        # –ö–æ–º–ø–æ–Ω–æ–≤–∫–∞
        group_layout.addLayout(filter_layout)
        group_layout.addWidget(self.scripts_list)
        group_layout.addLayout(btn_layout)
        main_layout.addWidget(group_box)

    def load_scripts(self):
        """
        –ó–∞–≥—Ä—É–∂–∞–µ—Ç —Å–ø–∏—Å–æ–∫ —Å–∫—Ä–∏–ø—Ç–æ–≤ –∏–∑ –º–µ–Ω–µ–¥–∂–µ—Ä–∞ –∏ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç –∏—Ö.
        """
        self.scripts_list.clear()
        for script in self.manager.get_scripts():
            item = QListWidgetItem(f"{script['name']} [{script['type']}]")
            item.setData(Qt.UserRole, script)
            self.scripts_list.addItem(item)

    def filter_scripts(self, text: str):
        """
        –§–∏–ª—å—Ç—Ä—É–µ—Ç —Å–∫—Ä–∏–ø—Ç—ã –ø–æ –∏–º–µ–Ω–∏.
        """
        for i in range(self.scripts_list.count()):
            item = self.scripts_list.item(i)
            item.setHidden(text.lower() not in item.text().lower())

    def filter_by_tags(self, text: str):
        """
        –§–∏–ª—å—Ç—Ä—É–µ—Ç —Å–∫—Ä–∏–ø—Ç—ã –ø–æ —Ç–µ–≥–∞–º.
        """
        filter_tags = [t.strip().lower() for t in text.split(',') if t.strip()]

        for i in range(self.scripts_list.count()):
            item = self.scripts_list.item(i)
            script_tags = [t.lower() for t in item.data(Qt.UserRole).get('tags', [])]
            # –°–∫—Ä–∏–ø—Ç –ø—Ä–æ—Ö–æ–¥–∏—Ç —Ñ–∏–ª—å—Ç—Ä, –µ—Å–ª–∏ —Å–æ–¥–µ—Ä–∂–∏—Ç –≤—Å–µ —É–∫–∞–∑–∞–Ω–Ω—ã–µ —Ç–µ–≥–∏
            match = all(ft in script_tags for ft in filter_tags)
            item.setHidden(not match)

    def show_context_menu(self, pos):
        """
        –û—Ç–æ–±—Ä–∞–∂–∞–µ—Ç –∫–æ–Ω—Ç–µ–∫—Å—Ç–Ω–æ–µ –º–µ–Ω—é –¥–ª—è –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ —Å–∫—Ä–∏–ø—Ç–∞ –∏–ª–∏ –¥–ª—è –ø—É—Å—Ç–æ–π –æ–±–ª–∞—Å—Ç–∏.
        """
        menu = QMenu()
        item = self.scripts_list.itemAt(pos)

        if item:
            # –î–µ–π—Å—Ç–≤–∏—è –¥–ª—è –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ —Å–∫—Ä–∏–ø—Ç–∞
            execute_action = QAction("‚ñ∂ –ó–∞–ø—É—Å—Ç–∏—Ç—å", self)
            execute_action.triggered.connect(lambda: self.execute_script(item))

            # –ù–æ–≤–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ: —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å (–æ—Ç–∫—Ä—ã—Ç—å —Ñ–∞–π–ª –≤ —Ä–µ–¥–∞–∫—Ç–æ—Ä–µ)
            edit_file_action = QAction("üìù –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —Å–∫—Ä–∏–ø—Ç", self)
            edit_file_action.triggered.connect(lambda: self.edit_script_dialog(item))

            rename_action = QAction("‚úé –ü–µ—Ä–µ–∏–º–µ–Ω–æ–≤–∞—Ç—å", self)
            rename_action.triggered.connect(lambda: self.rename_script_dialog(item))

            edit_tags_action = QAction("üè∑ –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —Ç–µ–≥–∏", self)
            edit_tags_action.triggered.connect(lambda: self.edit_tags_dialog(item))

            delete_action = QAction("‚ùå –£–¥–∞–ª–∏—Ç—å", self)
            delete_action.triggered.connect(lambda: self.delete_script_dialog(item))

            menu.addAction(execute_action)
            menu.addAction(edit_file_action)
            menu.addSeparator()
            menu.addAction(rename_action)
            menu.addAction(edit_tags_action)
            menu.addAction(delete_action)
        else:
            # –ö–æ–Ω—Ç–µ–∫—Å—Ç–Ω–æ–µ –º–µ–Ω—é –¥–ª—è –ø—É—Å—Ç–æ–π –æ–±–ª–∞—Å—Ç–∏
            refresh_action = QAction("üîÑ –û–±–Ω–æ–≤–∏—Ç—å —Å–ø–∏—Å–æ–∫", self)
            refresh_action.triggered.connect(self.load_scripts)

            add_action = QAction("‚ûï –î–æ–±–∞–≤–∏—Ç—å —Å–∫—Ä–∏–ø—Ç", self)
            add_action.triggered.connect(self.add_script_dialog)

            menu.addAction(refresh_action)
            menu.addAction(add_action)

        menu.exec_(self.scripts_list.viewport().mapToGlobal(pos))

    def add_script_dialog(self):
        """
        –û—Ç–∫—Ä—ã–≤–∞–µ—Ç –¥–∏–∞–ª–æ–≥ –¥–ª—è –≤—ã–±–æ—Ä–∞ —Ñ–∞–π–ª–∞ —Å–∫—Ä–∏–ø—Ç–∞ –∏ –¥–æ–±–∞–≤–ª—è–µ—Ç –µ–≥–æ –≤ –±–∏–±–ª–∏–æ—Ç–µ–∫—É.
        """
        path, _ = QFileDialog.getOpenFileName(
            self, "–í—ã–±–µ—Ä–∏—Ç–µ —Å–∫—Ä–∏–ø—Ç", "",
            "–°–∫—Ä–∏–ø—Ç—ã (*.ps1 *.bat *.cmd *.vbs);;–í—Å–µ —Ñ–∞–π–ª—ã (*)"
        )
        if path:
            tags, ok = QInputDialog.getText(
                self, "–î–æ–±–∞–≤–∏—Ç—å —Ç–µ–≥–∏", "–í–≤–µ–¥–∏—Ç–µ —Ç–µ–≥–∏ —á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é:"
            )
            if ok:
                tags_list = [t.strip().lower() for t in tags.split(',') if t.strip()]
                try:
                    self.manager.add_script(path, tags_list)
                    self.load_scripts()
                    Notification("–°–∫—Ä–∏–ø—Ç —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω!", "success").show_notification()
                except Exception as e:
                    Notification(f"–û—à–∏–±–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Å–∫—Ä–∏–ø—Ç–∞: {str(e)}", "error").show_notification()

    def rename_script_dialog(self, item):
        """
        –û—Ç–∫—Ä—ã–≤–∞–µ—Ç –¥–∏–∞–ª–æ–≥ –¥–ª—è –ø–µ—Ä–µ–∏–º–µ–Ω–æ–≤–∞–Ω–∏—è —Å–∫—Ä–∏–ø—Ç–∞.
        """
        script = item.data(Qt.UserRole)
        old_name = script['name']
        new_name, ok = QInputDialog.getText(
            self, "–ü–µ—Ä–µ–∏–º–µ–Ω–æ–≤–∞—Ç—å —Å–∫—Ä–∏–ø—Ç",
            "–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤–æ–µ –∏–º—è:",
            QLineEdit.Normal,
            old_name
        )
        if ok and new_name and new_name != old_name:
            try:
                extension = Path(script['full_name']).suffix
                new_full_name = f"{new_name}{extension}"
                if self.manager.rename_script(script['full_name'], new_full_name):
                    self.load_scripts()
                    Notification("–°–∫—Ä–∏–ø—Ç —É—Å–ø–µ—à–Ω–æ –ø–µ—Ä–µ–∏–º–µ–Ω–æ–≤–∞–Ω", "success").show_notification()
            except Exception as e:
                Notification(f"–û—à–∏–±–∫–∞ –ø–µ—Ä–µ–∏–º–µ–Ω–æ–≤–∞–Ω–∏—è: {str(e)}", "error").show_notification()

    def delete_script_dialog(self, item):
        """
        –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ—Ç —É–¥–∞–ª–µ–Ω–∏–µ —Å–∫—Ä–∏–ø—Ç–∞ –∏ —É–¥–∞–ª—è–µ—Ç –µ–≥–æ.
        """
        script = item.data(Qt.UserRole)
        reply = QMessageBox.question(
            self,
            "–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ —É–¥–∞–ª–µ–Ω–∏—è",
            f"–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å —Å–∫—Ä–∏–ø—Ç '{script['name']}'?",
            QMessageBox.Yes | QMessageBox.No
        )
        if reply == QMessageBox.Yes:
            try:
                self.manager.delete_script(script['full_name'])
                self.load_scripts()
                Notification("–°–∫—Ä–∏–ø—Ç —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω", "success").show_notification()
            except Exception as e:
                Notification(f"–û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è: {str(e)}", "error").show_notification()

    def edit_tags_dialog(self, item):
        """
        –û—Ç–∫—Ä—ã–≤–∞–µ—Ç –¥–∏–∞–ª–æ–≥ –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Ç–µ–≥–æ–≤ —Å–∫—Ä–∏–ø—Ç–∞.
        """
        script = item.data(Qt.UserRole)
        current_tags = ", ".join(script.get('tags', []))

        new_tags, ok = QInputDialog.getText(
            self,
            "–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —Ç–µ–≥–∏",
            "–í–≤–µ–¥–∏—Ç–µ —Ç–µ–≥–∏ —á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é:",
            text=current_tags
        )

        if ok:
            tags_list = [t.strip().lower() for t in new_tags.split(',') if t.strip()]
            unique_tags = list(dict.fromkeys(tags_list))
            try:
                self.manager.update_tags(script['full_name'], unique_tags)
                self.load_scripts()
                Notification("–¢–µ–≥–∏ –æ–±–Ω–æ–≤–ª–µ–Ω—ã", "success").show_notification()
            except Exception as e:
                Notification(f"–û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Ç–µ–≥–æ–≤: {str(e)}", "error").show_notification()

    def manage_tags_dialog(self):
        """
        –û—Ç–æ–±—Ä–∞–∂–∞–µ—Ç –≤—Å–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ —Ç–µ–≥–∏ –≤ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω–æ–º –æ–∫–Ω–µ.
        """
        all_tags = set()
        for script in self.manager.get_scripts():
            all_tags.update(script.get('tags', []))
        tags_str = ", ".join(sorted(all_tags))
        QMessageBox.information(self, "–í—Å–µ —Ç–µ–≥–∏", f"–°—É—â–µ—Å—Ç–≤—É—é—â–∏–µ —Ç–µ–≥–∏:\n{tags_str}")

    def execute_script(self, item):
        """
        –í—ã–ø–æ–ª–Ω—è–µ—Ç —Å–∫—Ä–∏–ø—Ç. –¢–µ–ø–µ—Ä—å –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –∑–Ω–∞—á–µ–Ω–∏–µ –∏–∑ –ø–æ–ª—è 'path', –∞ –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç ‚Äì –±–µ—Ä–µ—Ç—Å—è 'full_name'.
        –ü—Ä–∏ —É—Å–ø–µ—à–Ω–æ–º –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∏–ª–∏ –≤–æ–∑–Ω–∏–∫–Ω–æ–≤–µ–Ω–∏–∏ –æ—à–∏–±–∫–∏ –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç—Å—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ.
        """
        script = item.data(Qt.UserRole)
        file_to_execute = script.get('path', script.get('full_name'))
        try:
            # –ï—Å–ª–∏ —Ç—Ä–µ–±—É–µ—Ç—Å—è –∑–∞–ø—É—Å–∫ —á–µ—Ä–µ–∑ –º–µ–Ω–µ–¥–∂–µ—Ä, —Ç–æ –∏—Å–ø–æ–ª—å–∑—É–µ–º –µ–≥–æ –º–µ—Ç–æ–¥.
            self.manager.execute_script(file_to_execute)
            self.script_executed.emit(script['name'], "success")
            Notification(f"–°–∫—Ä–∏–ø—Ç '{script['name']}' –≤—ã–ø–æ–ª–Ω–µ–Ω —É—Å–ø–µ—à–Ω–æ", "success").show_notification()
        except Exception as e:
            self.script_executed.emit(script['name'], f"error: {str(e)}")
            Notification(f"–û—à–∏–±–∫–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è '{script['name']}': {str(e)}", "error").show_notification()

    def edit_script_dialog(self, item):
        """
        –û—Ç–∫—Ä—ã–≤–∞–µ—Ç —Å–∫—Ä–∏–ø—Ç –≤ —Å–∏—Å—Ç–µ–º–Ω–æ–º —Ä–µ–¥–∞–∫—Ç–æ—Ä–µ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é.
        """
        script = item.data(Qt.UserRole)
        file_to_edit = script.get('path', script.get('full_name'))
        url = QUrl.fromLocalFile(file_to_edit)
        if not QDesktopServices.openUrl(url):
            Notification("–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–∫—Ä—ã—Ç—å —Å–∫—Ä–∏–ø—Ç –≤ —Ä–µ–¥–∞–∫—Ç–æ—Ä–µ", "error").show_notification()
